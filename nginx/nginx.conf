user www www;
worker_processes auto;

error_log /data/wwwlogs/error_nginx.log error;
pid /var/run/nginx.pid;
worker_rlimit_nofile 51200;

events {
  use epoll;
  worker_connections 51200;
  multi_accept on;
}

http {
  include /usr/local/openresty/nginx/conf/mime.types;
  #default_type application/octet-stream;
  #default_type application/json;
  default_type html/text;
  server_names_hash_bucket_size 128;
  client_header_buffer_size 32k;
  large_client_header_buffers 4 32k;
  client_max_body_size 1024m;
  client_body_buffer_size 10m;
  #sendfile on;
  tcp_nopush on;
  keepalive_timeout 120;
  server_tokens off;
  tcp_nodelay on;
 
  log_format  main  '$remote_addr | $remote_user | [$time_local] | "$request" '

                               '$status | $body_bytes_sent | "$http_referer" | '

                               ' | "$http_user_agent" | "$http_x_forwarded_for" | "$request_time" | "$request_body" | "$resp_body"';


  fastcgi_connect_timeout 300;
  fastcgi_send_timeout 300;
  fastcgi_read_timeout 300;
  fastcgi_buffer_size 64k;
  fastcgi_buffers 4 64k;
  fastcgi_busy_buffers_size 128k;
  fastcgi_temp_file_write_size 128k;
  fastcgi_intercept_errors on;

  #Gzip Compression
  gzip on;
  gzip_buffers 16 8k;
  gzip_comp_level 6;
  gzip_http_version 1.1;
  gzip_min_length 256;
  gzip_proxied any;
  gzip_vary on;
  gzip_types
    text/xml application/xml application/atom+xml application/rss+xml application/xhtml+xml image/svg+xml
    text/javascript application/javascript application/x-javascript
    text/x-json application/json application/x-web-app-manifest+json
    text/css text/plain text/x-component
    font/opentype application/x-font-ttf application/vnd.ms-fontobject
    image/x-icon;
  gzip_disable "MSIE [1-6]\.(?!.*SV1)";

  #If you have a lot of static files to serve through Nginx then caching of the files' metadata (not the actual files' contents) can save some latency.
  open_file_cache max=1000 inactive=20s;
  open_file_cache_valid 30s;
  open_file_cache_min_uses 2;
  open_file_cache_errors on;
 
  geo $base_project_root {
      default "/data/wwwroot/bevan.top";
  }

  geo $lua_base_path {
      default "/data/wwwroot/bevan.top/lua";
  }

  geo $base_ngxconf_path {
      default "/usr/local/openresty/nginx/conf";
  }

########################   lua   ############################
#lua_package_path "/usr/local/openresty/lualib/?.lua;;/usr/local/openresty/nginx/conf/waf/?.lua";
lua_package_path "/usr/local/openresty/lualib/?.lua;;/data/wwwroot/bevan.top/lua/wafCore/?.lua";
lua_package_cpath "/usr/local/openresty/lualib/?.so;;";

#lua_shared_dict ip_blacklist 1m;
lua_shared_dict limit 10m;


lua_need_request_body on;


########################  lua waf  ############################
#init_by_lua_file /usr/local/openresty/lualib/resty/waf/init.lua;
#init_by_lua_file /usr/local/openresty/nginx/conf/waf/init.lua;
init_by_lua_file /data/wwwroot/bevan.top/lua/wafCore/init.lua;
#access_by_lua_file /usr/local/openresty/lualib/resty/waf/waf.lua;
#access_by_lua_file /usr/local/openresty/nginx/conf/waf/waf.lua;
access_by_lua_file /data/wwwroot/bevan.top/lua/wafCore/waf.lua;


limit_conn_zone $binary_remote_addr zone=conn_zone:1m;
limit_req_zone $binary_remote_addr zone=req_zone:1m rate=1r/s;

######################## default ############################
  server {
    listen 80;
    server_name _;
    #sendfile on;
    set $resp_body "";
    include /usr/local/openresty/nginx/conf/rewrite/laravel.conf;

    access_log /data/wwwlogs/access_nginx.log combined;
    root /data/wwwroot/bevan.top/public;
    index index.html index.htm index.php;
    error_page 404 /404.html;
    #error_page 502 /502.html;
    #resolver 8.8.8.8;
    #location / {
	#default_type text/html;
        #expires 24h;
	#limit_req zone=req_zone;
        #auth_basic "Auth access test!input your password!";
        #auth_basic_user_file /usr/local/openresty/ngin/auth_conf;
        #limit_conn conn_zone 1;
        #limit_req zone=req_zone burst=3 nodelay;
	#content_by_lua_block {
	#  res = ngx.location.capture('/api/testLua4')
	#  ngx.say(res.body)
	#  ngx.say(res.status)		
	#}
        #proxy_pass http://$http_host$request_uri; 
        #content_by_lua_file /data/wwwroot/bevan.top/lua/proxy.lua;
    #}

    location /admin/.*\.(htm|html)$ {
      root /data/wwwroot/random;
      #index index.html index.htm;
      allow 114.216.211.39;
      deny all;
    }

    #location /subfilter {
    #  root /data/wwwroot/random;
    #  index index.html index.htm;
    #  sub_filter 'show' 'SHOW';
    #}
    #location /mystatus {
    #	stub_status;
    #}
    #location /nginx_status {
    #  stub_status on;
    #  access_log off;
    #  allow 127.0.0.1;
    #  deny all;
    #}
    location ~ [^/]\.php(/|$) {
      #fastcgi_pass remote_php_ip:9000;
      fastcgi_pass unix:/dev/shm/php-cgi.sock;
      fastcgi_index index.php;
      include fastcgi.conf;
    }
    #location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|flv|mp4|ico)$ {
    #  #expires 30d;
    #  #access_log off;
    #  gzip on;
    #  gzip_http_version 1.1;
    #  gzip_comp_level 2;
    #  gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    #  root /data/wwwroot/random;
    #}
    #location ~ ^/download {
    #  gzip_static on;
    #  tcp_nopush on;
    #  root /data/wwwroot/random;
    #}
    location ~ .*\.(js|css)?$ {
      expires 7d;
      access_log off;
    }
    location ~ /\.ht {
      deny all;
    }
  }
########################## vhost #############################
  include vhost/*.conf;
}
